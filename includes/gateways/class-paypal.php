<?php

namespace EverAccounting\Gateways;

use EverAccounting\Abstracts\Gateway;
use EverAccounting\Models\Invoice;
use Omnipay\Omnipay;

/**
 * Class Paypal_Payment
 * @package EverAccounting\Gateways
 */
class Paypal extends Gateway {

	/**
	 * Paypal constructor.
	 */
	public function __construct() {
		$this->id    = 'paypal';
		$this->title = __( 'Paypal', 'wp-ever-accounting' );
		parent::__construct();
	}

	/**
	 * Return admin settings fields.
	 * @return array
	 */
	public function settings_fields() {
		return wp_parse_args( array(
			array(
				'id'    => 'gateway_' . $this->id . '_email',
				'title' => __( 'Email', 'wp-ever-accounting' ),
				'desc'  => __( 'Paypal email', 'wp-ever-accounting' ),
			),
			array(
				'id'    => 'gateway_' . $this->id . '_password',
				'type'  => 'password',
				'title' => __( 'Password', 'wp-ever-accounting' ),
				'desc'  => __( 'Paypal password', 'wp-ever-accounting' ),
			),
			array(
				'id'    => 'gateway_' . $this->id . '_signature',
				'title' => __( 'Signature', 'wp-ever-accounting' ),
				'desc'  => __( 'Paypal signature', 'wp-ever-accounting' ),
			),
			array(
				'id'    => 'gateway_' . $this->id . '_test_mode',
				'type'    => 'checkbox',
				'title' => __( 'Test Mode', 'wp-ever-accounting' ),
				'desc'  => __( 'Enable PayPal sandbox', 'wp-ever-accounting' ),
			)
		), parent::settings_fields() );
	}

	/**
	 * Process Payment.
	 *
	 * Process the payment. Override this in your gateway. When implemented, this should.
	 * return the success and redirect in an array. e.g:
	 *
	 *        return array(
	 *            'result'   => 'success',
	 *            'redirect' => $this->get_return_url( $order )
	 *        );
	 *
	 * @param Invoice $invoice Order ID.
	 *
	 * @return array
	 */
	public function process_checkout( $invoice ) {
		$email     = eaccounting_get_option( 'gateway_' . $this->id . 'email' );
		$password  = eaccounting_get_option( 'gateway_' . $this->id . 'password' );
		$signature = eaccounting_get_option( 'gateway_' . $this->id . 'signature' );
//		if ( empty( $email ) || empty( $password ) || empty( $signature ) ) {
//			wp_die( esc_html__( 'Paypal payment gateway is not configured, please complete setup.', 'wp-ever-accounting' ) );
//		}

		// Process online for PayPal payment start
		$gateway = Omnipay::create('PayPal_Express');
		$gateway->setUsername($email);
		$gateway->setPassword($password);
		$gateway->setSignature($signature);
		$logoURL = eaccounting_get_option('company_logo');
//		if ($logoURL != '' && startsWith(site_url(), 'https://')) {
//			$gateway->setlogoImageUrl($logoURL);
//		}
		 $gateway->setTestMode(true);
		$gateway->setbrandName(eaccounting_get_option('company_name'));

		$request_data = [
			'amount'      => $invoice->get_total_due(),
			'returnUrl'   => site_url('gateways/paypal/complete_purchase?hash=' . $invoice->get_key() . '&invoiceid=' . $invoice->get_id()),
			'cancelUrl'   => site_url('gateways/paypal/complete_purchase?hash=' . $invoice->get_key() . '&invoiceid=' . $invoice->get_id()),
			'currency'    => $invoice->get_currency_code(),
		];
		$response = $gateway->purchase($request_data)->send();
		wp_die(var_dump($response));
		//return parent::process_checkout( $invoice ); // TODO: Change the autogenerated stub
	}
}
