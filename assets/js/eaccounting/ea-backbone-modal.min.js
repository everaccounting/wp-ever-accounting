!(function (o, e, n) {
	'use strict';
	(o.fn.ea_backbone_modal = function (e) {
		return this.each(function () {
			new o.ea_backbone_modal(o(this), e);
		});
	}),
		(o.ea_backbone_modal = function (e, t) {
			var n = o.extend({}, o.ea_backbone_modal.defaultOptions, t);
			n.template &&
				new o.ea_backbone_modal.View({
					target: n.template,
					string: n.variable,
					onSubmit: t.onSubmit,
					onReady: t.onReady,
				});
		}),
		(o.ea_backbone_modal.defaultOptions = { template: '', variable: {}, onSubmit: undefined, onReady: undefined }),
		(o.ea_backbone_modal.View = e.View.extend({
			tagName: 'div',
			id: 'ea-backbone-modal-dialog',
			_target: undefined,
			_string: undefined,
			onSubmit: undefined,
			onReady: undefined,
			events: { 'click .modal-close': 'closeButton', 'touchstart #btn-ok': 'addButton', keydown: 'keyboardActions' },
			resizeContent: function () {
				var e = o('.ea-backbone-modal-content').find('article'),
					t = 0.75 * o(window).height();
				e.css({ 'max-height': t + 'px' });
			},
			initialize: function (e) {
				var t = this;
				(this._target = e.target),
					(this._string = e.string),
					(this.onSubmit = e.onSubmit),
					(this.onReady = e.onReady),
					n.bindAll(this, 'render'),
					this.render(),
					o(window).resize(function () {
						t.resizeContent();
					});
			},
			render: function () {
				var e = wp.template(this._target);
				this.$el.append(e(this._string)),
					o(document.body).css({ overflow: 'hidden' }).append(this.$el).addClass('ea-modal-open'),
					this.resizeContent(),
					this.$('.ea-backbone-modal-content').attr('tabindex', '0').focus(),
					o(document.body).trigger('init_tooltips'),
					o(document.body).trigger('ea_backbone_modal_loaded', this._target),
					o(document.body).trigger(this._target + '_loaded');
				var t = this;
				'function' == typeof this.onReady && this.onReady(this.$el, this),
					'function' == typeof this.onSubmit &&
						this.$el.find('form').on('submit', function (e) {
							e.preventDefault(), t.onSubmit(t.getFormData(), t);
						});
			},
			closeButton: function (e) {
				e.preventDefault(), this.closeModal();
			},
			closeModal: function () {
				o(document.body).trigger('ea_backbone_modal_before_remove', this._target),
					this.undelegateEvents(),
					o(document).off('focusin'),
					o(document.body).css({ overflow: 'auto' }).removeClass('ea-modal-open'),
					this.remove(),
					o(document.body).trigger('ea_backbone_modal_removed', this._target);
			},
			getFormData: function () {
				var n = {};
				return (
					o.each(o('form', this.$el).serializeArray(), function (e, t) {
						-1 !== t.name.indexOf('[]')
							? ((t.name = t.name.replace('[]', '')), (n[t.name] = o.makeArray(n[t.name])), n[t.name].push(t.value))
							: (n[t.name] = t.value);
					}),
					n
				);
			},
			keyboardActions: function (e) {
				var t = e.keyCode || e.which;
				if (13 === t && this.$el.find('form').length)
					return e.preventDefault(), this.$el.find('[type="submit"]').trigger('click'), !1;
				27 === t && this.closeButton(e);
			},
			disableSubmit: function () {
				this.$el.find('*[type="submit"]').attr('disabled', 'disabled');
			},
			enableSubmit: function () {
				this.$el.find('*[type="submit"]').removeAttr('disabled');
			},
		}));
})(jQuery, Backbone, _);
