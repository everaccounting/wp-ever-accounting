jQuery(document).ready(function (i) {
	i(".ea-input-date").datepicker({dateFormat: "yy-mm-dd"}), i(".ea-help-tip").tipTip(), i(".ea-input-price").inputmask("decimal", {alias: "numeric", groupSeparator: ",", autoGroup: !0, digits: 2, radixPoint: ".", digitsOptional: !1, allowMinus: !1, prefix: "", placeholder: "0.000", rightAlign: 0, clearMaskOnLostFocus: !1}), i(".ea-date-range-picker").daterangepicker({autoUpdateInput: !1, locale: eaccounting_admin_i10n.datepicker.locale, ranges: {Today: [moment(), moment()], Yesterday: [moment().subtract(1, "days"), moment().subtract(1, "days")], "Last 7 Days": [moment().subtract(6, "days"), moment()], "Last 30 Days": [moment().subtract(29, "days"), moment()], "This Month": [moment().startOf("month"), moment().endOf("month")], "Last Month": [moment().subtract(1, "month").startOf("month"), moment().subtract(1, "month").endOf("month")]}}).on("apply.daterangepicker", function (e, t) {
		var a = eaccounting_admin_i10n.datepicker.locale.format, n = eaccounting_admin_i10n.datepicker.locale.separator;
		i(this).find("span").html(t.startDate.format(a) + n + t.endDate.format(a)), i(this).find('[name="start_date"]').val(t.startDate.format("YYYY-MM-DD")), i(this).find('[name="end_date"]').val(t.endDate.format("YYYY-MM-DD"))
	}).on("cancel.daterangepicker", function (e, t) {
		i(this).find("span").html(""), i(this).find('[name="start_date"]').val(""), i(this).find('[name="end_date"]').val("")
	}), i(document).on("click", ".wp-list-table .ea_item_status_update", function () {
		var e = i(this).data("object_id"), t = i(this).data("nonce"), a = i(this).is(":checked") ? 1 : 0, n = i(this).data("object_type");
		if (!e || !t || !n) return i.eaccounting_notice("Item Missing some important property", "error"), !1;
		wp.ajax.send({
			data: {objectid: e, nonce: t, enabled: a, objecttype: n, action: "eaccounting_item_status_update"}, success: function (e) {
				i.eaccounting_notice(e, "success")
			}, error: function (e) {
				i.eaccounting_notice(e, "error")
			}
		})
	}), i(document).on("click", function () {
		i(".ea-dropdown").removeClass("open")
	}).on("click", ".ea-dropdown-button", function (e) {
		e.preventDefault(), e.stopPropagation(), i(".ea-dropdown").removeClass("open"), i(this).closest(".ea-dropdown").toggleClass("open")
	})
}), jQuery.fn.serializeObject = function () {
	var e = {}, t = this.serializeArray();
	return jQuery.each(t, function () {
		e[this.name] !== undefined ? (e[this.name].push || (e[this.name] = [e[this.name]]), e[this.name].push(this.value || "")) : e[this.name] = this.value || ""
	}), e
}, jQuery.fn.serializeAssoc = function () {
	var o = {};
	return jQuery.each(this.serializeArray(), function (e, t) {
		var a, n, i = t.name.match(/(.*?)\[(.*?)\]/);
		null !== i ? (a = i[1], n = i[2], o[a] || (o[a] = []), n.length || (n = o[a].length), o[a][n] ? ($.isArray(o[a][n]) || (o[a][n] = []), o[a][n].push(t.value)) : o[a][n] = t.value) : o[t.name] ? ($.isArray(o[t.name]) || (o[t.name] = []), o[t.name].push(t.value)) : o[t.name] = t.value
	}), o
}, jQuery(function (n) {
	jQuery.fn.ea_color_picker = function () {
		return this.each(function () {
			var a = this;
			n(a).iris({
				change: function (e, t) {
					n(a).parent().find(".colorpickpreview").css({backgroundColor: t.color.toString()})
				}, hide: !0, border: !0
			}).on("click focus", function (e) {
				e.stopPropagation(), n(".iris-picker").hide(), n(a).closest("div").find(".iris-picker").show(), n(a).data("original-value", n(a).val())
			}).on("change", function () {
				n(a).is(".iris-error") && (n(this).data("original-value").match(/^\#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/) ? n(a).val(n(a).data("original-value")).change() : n(a).val("").change())
			}), n("body").on("click", function () {
				n(".iris-picker").hide()
			})
		})
	}, n(".ea-input-color").ea_color_picker()
});
