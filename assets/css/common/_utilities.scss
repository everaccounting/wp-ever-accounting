$spacer: 1em !default;
$spacers: (
	0: 0,
	1: .5em,
	2: 1em,
	3: 1.5em,
	4: 2em,
	5: 2.5em,
	6: 3em,
	7: 3.5em,
	8: 4em,
) !default;
$utilities: (
	"clear": (
		property: clear,
		values: (
			both: both,
		)
	),
	"overflow": (
		property: overflow,
		values: auto hidden visible scroll,
	),
	"float": (
		responsive: true,
		property: float,
		values: left right none,
	),
	"display": (
		property: display,
		class: display,
		values: inline inline-block block flex inline-flex none
	),
	"max-width": (
		property: max-width,
		class: max-width,
		values: (
			50: 50%,
			100: 100%,
			50px: 50px,
			100px: 100px,
			200px: 200px,
		)
	),
	"max-height": (
		property: max-height,
		class: max-height,
		values: (100: 100%)
	),
	// Flex Utility Classes
	"flex": (
		property: flex,
		values: (fill: 1 1 auto)
	),
	"flex-direction": (
		property: flex-direction,
		class: flex,
		values: row column row-reverse column-reverse
	),
	"flex-wrap": (
		property: flex-wrap,
		class: flex,
		values: wrap nowrap wrap-reverse
	),
	"gap": (
		property: gap,
		class: gap,
		values: $spacers
	),
	"justify-content": (
		property: justify-content,
		values: (
			start: flex-start,
			end: flex-end,
			center: center,
			between: space-between,
			around: space-around,
			evenly: space-evenly,
		)
	),
	"align-items": (
		property: align-items,
		values: (
			start: flex-start,
			end: flex-end,
			center: center,
			baseline: baseline,
			stretch: stretch,
		)
	),
	"align-content": (
		property: align-content,
		values: (
			start: flex-start,
			end: flex-end,
			center: center,
			between: space-between,
			around: space-around,
			stretch: stretch,
		)
	),
	"align-self": (
		property: align-self,
		values: (
			auto: auto,
			start: flex-start,
			end: flex-end,
			center: center,
			baseline: baseline,
			stretch: stretch,
		)
	),
	// margin and padding
	"margin": (
		responsive: true,
		property: margin,
		class: margin,
		values: map-merge($spacers, (auto: auto))
	),
	"margin-x": (
		responsive: true,
		property: margin-right margin-left,
		class: margin-x,
		values: map-merge($spacers, (auto: auto))
	),
	"margin-y": (
		responsive: true,
		property: margin-top margin-bottom,
		class: margin-y,
		values: map-merge($spacers, (auto: auto))
	),
	"margin-top": (
		responsive: true,
		property: margin-top,
		class: margin-top,
		values: map-merge($spacers, (auto: auto))
	),
	"margin-bottom": (
		responsive: true,
		property: margin-bottom,
		class: margin-bottom,
		values: map-merge($spacers, (auto: auto))
	),
	"margin-start": (
		property: margin-left,
		class: margin-start,
		values: map-merge($spacers, (auto: auto))
	),
	// Padding utilities
	"padding": (
		responsive: true,
		property: padding,
		class: padding,
		values: $spacers
	),
	"padding-x": (
		responsive: true,
		property: padding-right padding-left,
		class: padding-x,
		values: $spacers
	),
	"padding-y": (
		responsive: true,
		property: padding-top padding-bottom,
		class: padding-y,
		values: $spacers
	),
	"padding-top": (
		responsive: true,
		property: padding-top,
		class: padding-top,
		values: $spacers
	),
	"padding-bottom": (
		responsive: true,
		property: padding-bottom,
		class: padding-bottom,
		values: $spacers
	),
	"text-align": (
		responsive: true,
		property: text-align,
		class: text,
		values: (
			start: left,
			end: right,
			center: center,
		)
	),
	"border" : (
		property: border,
		class: border,
		values: (
			null: 1px solid #e1e2e2,
			0: 0,
		)
	),
	"border-top" : (
		property: border-top,
		class: border-top,
		values: (
			null: 1px solid #e1e2e2,
			0: 0,
		)
	),
	"border-bottom" : (
		property: border-bottom,
		class: border-bottom,
		values: (
			null: 1px solid #e1e2e2,
			0: 0,
		)
	),
	"border-start" : (
		property: border-left,
		class: border-start,
		values: (
			null: 1px solid #e1e2e2,
			0: 0,
		)
	),
	"border-end" : (
		property: border-right,
		class: border-end,
		values: (
			null: 1px solid #e1e2e2,
			0: 0,
		)
	),
	//"background-color": (
	//	property: background,
	//	class: background,
	//	values: (
	//		transparent: transparent,
	//		white: '#fff',
	//	)
	//),
);
// generate generate-utilities using generate-utilities mixins.
@include generate-utilities($utilities);


/*------------------------------------------------------------------------------
Overflows
------------------------------------------------------------------------------*/
.overflow-x {
	overflow-x: auto;
}
